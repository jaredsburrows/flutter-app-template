name: build

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, labeled, unlabeled, synchronize ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=1024m"
  JAVA_VERSION: 17
  ANDROID_API_LEVEL: 35
  IPHONE_DEVICE: "iPhone 15 Pro Max"

jobs:
  build:
    name: Build Web
    runs-on: ubuntu-latest

    permissions:
      checks: write # For EnricoMi/publish-unit-test-result-action
      pull-requests: write # For EnricoMi/publish-unit-test-result-action
      contents: write # For peaceiris/actions-gh-pages

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.1.7

      - name: Cache Build Dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            /opt/hostedtoolcache/flutter
            /Users/runner/hostedtoolcache/flutter
            /Users/runner/.pub-cache
          key: ${{ runner.os }}-build
          restore-keys: |
            ${{ runner.os }}-build

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          cache: true

      - name: Run Analyzer
        run: flutter analyze

      - name: Run Web Unit Tests
        run: |
          flutter test --coverage \
            --test-randomize-ordering-seed=random \
            --file-reporter json:build/web/reports/unit-test-results.json

      - name: Publish Build Web Unit Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2.17.1
        if: always()
        with:
          check_name: "Web Unit Test Results"
          comment_mode: off
          files: |
            build/web/reports/unit-test-results.json

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      - name: Setup chromedriver
        uses: nanasess/setup-chromedriver@v2.2.2
      - run: |
          chromedriver --version

      - name: Run Build Web Integration Tests on Web
        run: |
          export DISPLAY=:99
          chromedriver --port=4444 --trace-buffer-size=100000 &
          flutter drive \
            --driver=test_driver/integration_test.dart \
            --target=integration_test/all_tests.dart \
            -d chrome \
            --web-browser-flag="--autoplay-policy=no-user-gesture-required" \
            --web-browser-flag="--disable-web-security" \
            --timeout=30 | tee output.log
          # We have to check the output for failed tests matching the string "[E]"
          output=$(<output.log)
          if [[ "$output" =~ \[E\] ]]; then
          # You will see "All tests passed." in the logs even when tests failed.
          echo "All tests did not pass. Please check the logs for more information."
          exit 1
          fi

      # TODO: no report for flutter drive?
      - name: Publish Build Web Integration Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2.17.1
        if: always()
        with:
          check_name: "Web Integration Test Results"
          comment_mode: off
          files: |
            build/reports/web/integration-test-results.json

  android:
    name: Build Android
    runs-on: ubuntu-latest
    needs:
      - build

    permissions:
      checks: write # For EnricoMi/publish-unit-test-result-action
      pull-requests: write # For EnricoMi/publish-unit-test-result-action
      contents: write # For peaceiris/actions-gh-pages

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.1.7

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v3.5.0

      - name: Cache Android Dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
            /opt/hostedtoolcache/flutter
            /Users/runner/hostedtoolcache/flutter
            /Users/runner/.pub-cache
          key: ${{ runner.os }}-build
          restore-keys: |
            ${{ runner.os }}-build

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          cache: true

      - name: Configure JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4.4.0
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.1.0

      - name: Run Android Android Unit Tests
        run: |
          flutter test --coverage \
            --test-randomize-ordering-seed=random \
            --file-reporter json:build/android/reports/unit-test-results.json

      - name: Publish Android Unit Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2.17.1
        if: always()
        with:
          check_name: "Android Unit Test Results"
          comment_mode: off
          files: |
            build/android/reports/unit-test-results.json

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache AVD
        uses: actions/checkout@v4.1.7
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.ANDROID_API_LEVEL }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2.32.0
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android Instrumentation Tests on Android API ${{ env.ANDROID_API_LEVEL }}
        uses: reactivecircus/android-emulator-runner@v2.32.0
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          disable-animations: true
          script: flutter test integration_test --coverage --test-randomize-ordering-seed=random --file-reporter json:build/reports/android/integration-test-results.json || flutter test integration_test --coverage --test-randomize-ordering-seed=random --file-reporter json:build/reports/android/integration-test-results.json

      - name: Publish Android Integration Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2.17.1
        if: always()
        with:
          check_name: "Android Integration Test Results"
          comment_mode: off
          files: |
            build/reports/android/integration-test-results.json

      - name: Build Android
        run: flutter build apk --release --obfuscate --split-debug-info build/app/outputs/symbols-apk/ --target-platform android-arm64

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4.3.6
        if: github.repository == 'jaredsburrows/flutter-app-template' && github.ref == 'refs/heads/master'
        with:
          name: ${{ env.REPO_NAME }}-android-${{ github.run_id }}
          path: |
            build/app/outputs/apk/release
            build/app/outputs/bundle/release
            build/app/outputs/symbols-apk
            build/app/outputs/symbols-appbundle
            build/app/reports

  ios:
    name: Build iOS
    runs-on: macos-latest
    needs:
      - build

    permissions:
      checks: write # For EnricoMi/publish-unit-test-result-action
      pull-requests: write # For EnricoMi/publish-unit-test-result-action
      contents: write # For peaceiris/actions-gh-pages

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.1.7

      - name: Cache iOS Dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ios/Pods
            /opt/hostedtoolcache/flutter
            /Users/runner/hostedtoolcache/flutter
            /Users/runner/.pub-cache
          key: ${{ runner.os }}-build
          restore-keys: |
            ${{ runner.os }}-build

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          cache: true

      - name: Run iOS Unit Tests
        run: |
          flutter test --coverage \
            --test-randomize-ordering-seed=random \
            --file-reporter json:build/ios/reports/unit-test-results.json

      - name: Publish iOS Unit Test Report
        uses: EnricoMi/publish-unit-test-result-action/macos@v2.17.1
        if: always()
        with:
          check_name: "iOS Unit Test Results"
          comment_mode: off
          files: |
            build/ios/reports/unit-test-results.json

      - name: Run iOS Instrumentation Tests on ${{ env.IPHONE_DEVICE }} Simulator
        run: |
          UDID=$(
            xcrun xctrace list devices 2>&1 |
            grep -m 1 "${{ env.IPHONE_DEVICE }}" |
            awk -F'[()]' '{ print $4 }'
          )
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
          flutter test integration_test --coverage --test-randomize-ordering-seed=random --file-reporter json:build/reports/ios/integration-test-results.json || flutter test integration_test --coverage --test-randomize-ordering-seed=random --file-reporter json:build/reports/ios/integration-test-results.json

      - name: Publish iOS Integration Test Report
        uses: EnricoMi/publish-unit-test-result-action/macos@v2.17.1
        if: always()
        with:
          check_name: "iOS Integration Test Results"
          comment_mode: off
          files: |
            build/reports/ios/integration-test-results.json

      - name: Build iOS
        run: flutter build ios --release --obfuscate --split-debug-info build/ios/outputs/symbols --no-codesign

      - name: Upload iOS Artifacts
        uses: actions/upload-artifact@v4.3.6
        if: github.repository == 'jaredsburrows/flutter-app-template' && github.ref == 'refs/heads/master'
        with:
          name: ${{ env.REPO_NAME }}-ios-${{ github.run_id }}
          path: |
            build/ios/Release-iphoneos
            build/ios/symbols

  publish:
    name: Publish Website
    runs-on: ubuntu-latest
    if: github.repository == 'jaredsburrows/flutter-app-template' && github.ref == 'refs/heads/master'
    needs:
      - build
      - android
      - ios

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4.1.7

      - name: Cache Dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            /opt/hostedtoolcache/flutter
            /Users/runner/hostedtoolcache/flutter
            /Users/runner/.pub-cache
          key: ${{ runner.os }}-build
          restore-keys: |
            ${{ runner.os }}-build

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          cache: true

      - name: Build Website
        run: flutter build web --wasm --release --base-href /flutter-app-template/

      - name: Upload Web Artifacts
        uses: actions/upload-artifact@v4.3.6
        if: github.repository == 'jaredsburrows/flutter-app-template' && github.ref == 'refs/heads/master'
        with:
          name: ${{ env.REPO_NAME }}-web-${{ github.run_id }}
          path: |
            build/web

      - name: Publish Website
        uses: peaceiris/actions-gh-pages@v4.0.0
        if: github.repository == 'jaredsburrows/flutter-app-template' && github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          user_name: "Github Actions"
          user_email: "action@github.com"
