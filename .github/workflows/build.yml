name: build

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, labeled, unlabeled, synchronize ]

env:
  REPO_NAME: flutter-app-template
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -Xms128m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=1024m"

jobs:
  build:
    name: Android API ${{ matrix.api-level }} / iOS API ${{ matrix.device }} / JDK ${{ matrix.java-version }}
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 11
        api-level:
          - 31
        device:
          - "iPhone 13 Pro Max"

    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.3.0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.5

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3.2.3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
            ~/.android/build-cache
            /Users/runner/hostedtoolcache/flutter
            /Users/runner/.pub-cache
          key: ${{ runner.os }}-build
          restore-keys: |
            ${{ runner.os }}-build

      - name: Configure JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3.9.0
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
      - run: java -version

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.8.0
        with:
          channel: stable
          cache: true
      - run: |
          flutter --version
          flutter config --no-analytics

      - name: Run Analyzer
        run: flutter analyze --suppress-analytics --no-fatal-infos --no-fatal-warnings

      - name: Run Unit Tests
        run: flutter test --coverage --suppress-analytics

      - name: Cache AVD
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2.27.0
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Debug Instrumentation Tests on Android API ${{ matrix.api-level }}
        uses: reactivecircus/android-emulator-runner@v2.27.0
        continue-on-error: true
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          disable-animations: true
          script: flutter drive --target=test_driver/app.dart --suppress-analytics || true
        env:
          API_LEVEL: ${{ matrix.api-level }}

      - name: Start API ${{ matrix.device }} iOS Simulator API and Run Driver Tests
        run: |
          echo "Listing Devices"
          xcrun xctrace list devices
          UDID=$(
            xcrun xctrace list devices 2>&1 |
            grep -m 1 "${{ matrix.device }}" |
            awk -F'[()]' '{ print $4 }'
          )
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
          flutter drive --target=test_driver/app.dart --suppress-analytics || true

      - name: Build Android
        run: flutter build apk --release --obfuscate --split-debug-info build/app/outputs/symbols-apk/ --target-platform android-arm64 --suppress-analytics

      - name: Build iOS
        run: flutter build ios --release --obfuscate --split-debug-info build/ios/outputs/symbols --no-codesign --suppress-analytics

      - name: Build Website
        run: flutter build web --release --base-href /flutter-app-template/ --suppress-analytics

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.1.2
        if: always()
        with:
          name: ${{ env.REPO_NAME }}-android-${{ github.run_id }}
          path: |
            build/app/outputs/apk/release
            build/app/outputs/bundle/release
            build/app/outputs/symbols-apk
            build/app/outputs/symbols-appbundle
            build/app/reports
            build/ios/Release-iphoneos
            build/ios/symbols
            build/web
          if-no-files-found: warn

  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - build

    steps:
      - name: Checkout Project
        uses: actions/checkout@v3.3.0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.5

      - name: Configure JDK 11
        uses: actions/setup-java@v3.9.0
        with:
          distribution: temurin
          java-version: 11

      - name: Configure Flutter
        uses: subosito/flutter-action@v2.8.0
        with:
          channel: stable
          cache: true

      - name: Build Website
        run: flutter build web --release --base-href /flutter-app-template/ --suppress-analytics

      - name: Publish Website
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          user_name: "Github Actions"
          user_email: "action@github.com"
